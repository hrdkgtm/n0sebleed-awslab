---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: workload-a-nodepool
spec:
  template:
    metadata:
      labels:
        environment: test
        workload: workload-a
      # Taint nodes for workload-a only
    
    spec:
      taints:
      - key: workload
        value: workload-a
        effect: NoSchedule
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      
      requirements:
      - key: kubernetes.io/arch
        operator: In
        values: ["amd64"]
      - key: kubernetes.io/os  
        operator: In
        values: ["linux"]
      - key: karpenter.sh/capacity-type
        operator: In
        values: ["on-demand", "spot"]
      - key: node.kubernetes.io/instance-type
        operator: In
        values: 
        - t3.micro
        - t3.small
  
  limits:
    cpu: 20
    memory: 40Gi
  
  # Aggressive cleanup when empty
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 10s
---
apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: workload-b-nodepool
spec:
  template:
    metadata:
      labels:
        environment: test
        workload: workload-b
      # Taint nodes for workload-b only
    
    spec:
      taints:
      - key: workload
        value: workload-b
        effect: NoSchedule
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      
      requirements:
      - key: kubernetes.io/arch
        operator: In
        values: ["amd64"]
      - key: kubernetes.io/os  
        operator: In
        values: ["linux"]
      - key: karpenter.sh/capacity-type
        operator: In
        values: ["on-demand", "spot"]
      - key: node.kubernetes.io/instance-type
        operator: In
        values: 
        - t3.micro
        - t3.small
  
  limits:
    cpu: 20
    memory: 40Gi
  
  # Aggressive cleanup when empty
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 10s